Protocol: http
IP: 162.55.220.72
Port: 5005
Method: GET
EndPoint: /object_info_3
request url params: 
name: Olga
age: 34
salary: 2000
http://162.55.220.72:5005/object_info_3

1. Отправить запрос.
2. Статус код 200
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});
PASS Status code is 200

3. Спарсить response body в json
let jsonData = pm.response.json();


4. Спарсить request
 let reqData = pm.request.url.query.toObject()

5. Проверить, что name в ответе равно name s request (name забрать из request.)
pm.test("Correct name is Olga", function () {
    pm.expect(jsonData.name).to.eql(reqData.name)
});
PASS Correct name is Olga

6. Проверить, что age в ответе равно age s request (age забрать из request.)
pm.test("Correct age is 34", function () {
    pm.expect(jsonData.age).to.eql(reqData.age)
});
PASS Correct age is 34

7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)
pm.test("Correct salary is 2000", function () {
    pm.expect(jsonData.salary).to.eql(Number(reqData.salary))
});
PASS Correct salary is 2000

8. Вывести в консоль параметр family из response.
console.log(jsonData.family)

9. Проверить, что у параметра dog есть параметры name.
pm.test("Dog_name", function () {
    pm.expect(jsonData.family.pets.dog).to.have.property('name')
});
PASS Dog_name

10. Проверить, что у параметра dog есть параметры age
pm.test("Dog_age", function () {
    pm.expect(jsonData.family.pets.dog).to.have.property('age')
    });
PASS Dog_age

11. Проверить, что параметр name имеет значение Luky.  
  pm.test("Name dog is 'Luky'", function () {
    pm.expect(jsonData.family.pets.dog.name).to.eql('Luky')
     });
PASS Name dog is 'Luky'

12. Проверить, что параметр age имеет значение 4
   pm.test("age dog is 4", function () {
    pm.expect(jsonData.family.pets.dog.age).to.eql(Number(4)) 
    });
PASS age dog is 4 
